# First stage: Use NGINX base image from your artifact registry
FROM shivanandsonnad.pkg.pr2.harness.io/zdfbwyzmqmsnlsa1r2ee8g/docker_registry_remote_proxy_docker_anon/library/nginx:latest as nginx-stage
# Copy your application files to the NGINX document root
COPY ./myapp /usr/share/nginx/html

# Second stage: Use BusyBox with Alpine for lightweight operations
FROM shivanandsonnad.pkg.pr2.harness.io/zdfbwyzmqmsnlsa1r2ee8g/docker_registry_remote_proxy_docker_anon/library/busybox:1.35.0-uclibc as busybox-stage
# Create a simple file inside BusyBox
RUN echo "Hello from BusyBox (Alpine-based)!" > /busyboxfile.txt

# Third stage: Use Alpine Linux for additional dependencies or operations
FROM shivanandsonnad.pkg.pr2.harness.io/zdfbwyzmqmsnlsa1r2ee8g/docker_registry_remote_proxy_docker_anon/library/alpine:3.18 as alpine-stage
# Install additional tools or dependencies (if needed)
RUN apk add --no-cache curl
# Create another example file to be used later
RUN echo "Hello from Alpine!" > /alpinefile.txt

# Final stage: Combine everything into the NGINX base
FROM shivanandsonnad.pkg.pr2.harness.io/zdfbwyzmqmsnlsa1r2ee8g/docker_registry_remote_proxy_docker_anon/library/nginx:latest

# Copy the application from the first NGINX stage
COPY --from=nginx-stage /usr/share/nginx/html /usr/share/nginx/html

# Copy the file from the BusyBox stage
COPY --from=busybox-stage /busyboxfile.txt /usr/share/nginx/html/busyboxfile.txt

# Copy the file from the Alpine stage
COPY --from=alpine-stage /alpinefile.txt /usr/share/nginx/html/alpinefile.txt

# Expose the necessary port
EXPOSE 80

# Run the NGINX server
CMD ["nginx", "-g", "daemon off;"]
